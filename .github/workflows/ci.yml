name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.22', '1.23', '1.24']
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Download dependencies
      run: make deps

    - name: Verify dependencies
      run: go mod verify

    - name: Run all checks
      run: make check

  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ubuntu-latest-go-1.24-${{ hashFiles('**/go.sum') }}

    - name: Download dependencies
      run: make deps

    - name: Generate coverage report
      run: make coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  mcp-protocol-tests:
    name: MCP Protocol Compliance
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ubuntu-latest-go-1.24-${{ hashFiles('**/go.sum') }}

    - name: Download dependencies
      run: make deps

    - name: Test MCP Draft Specification
      run: go test -v ./server/test/draft/...

    - name: Test MCP 2024-11-05 Specification
      run: go test -v ./server/test/v20241105/...

    - name: Test MCP 2025-03-26 Specification
      run: go test -v ./server/test/v20250326/...

  example-compilation:
    name: Example Compilation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ubuntu-latest-go-1.24-${{ hashFiles('**/go.sum') }}

    - name: Download dependencies
      run: make deps

    - name: Test example compilation
      run: |
        echo "Testing that examples compile without errors..."
        for example_dir in examples/*/; do
          if [ -d "$example_dir" ]; then
            example_name=$(basename "$example_dir")
            echo "Testing compilation of example: $example_name"
            
            # Check for main.go in root of example
            if [ -f "${example_dir}main.go" ]; then
              echo "  Compiling ${example_dir}main.go"
              (cd "$example_dir" && go build -v .)
            fi
            
            # Check for main.go in server subdirectory
            if [ -f "${example_dir}server/main.go" ]; then
              echo "  Compiling ${example_dir}server/main.go"
              (cd "${example_dir}server" && go build -v .)
            fi
            
            # Check for main.go in client subdirectory
            if [ -f "${example_dir}client/main.go" ]; then
              echo "  Compiling ${example_dir}client/main.go"
              (cd "${example_dir}client" && go build -v .)
            fi
          fi
        done

  benchmarks:
    name: Benchmarks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ubuntu-latest-go-1.24-${{ hashFiles('**/go.sum') }}

    - name: Download dependencies
      run: make deps

    - name: Run benchmarks
      run: make bench

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest 